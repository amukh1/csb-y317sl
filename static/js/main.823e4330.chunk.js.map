{"version":3,"sources":["eq.js","App.js","index.js"],"names":["Eq","props","coeffi","vars","ans","coeff","split","vard","map","v","i","math","window","App","console","log","useState","dim","setDim","setCoeffi","setVars","ansz","setAnsz","stuff","be","id","coee2","buh","className","type","value","onChange","e","target","linearEquations","bee","idd","c","f","inv","multiply","rootElement","document","getElementById","createRoot","render"],"mappings":"6IAIe,SAASA,EAAGC,GACzB,IAAMC,EAAsBD,EAAtBC,OAAQC,EAAcF,EAAdE,KAAMC,EAAQH,EAARG,IAChBC,EAAQH,EAAOI,MAAM,KACrBC,EAAOJ,EAAKG,MAAM,KACtB,OACE,gCACGC,EAAKC,KAAI,SAACC,EAAGC,GACZ,OACE,qCACG,IACAL,EAAMK,GACND,EAAC,MAGR,IAAI,IAAG,OACFL,IAGX,CClBA,IAAIO,EAAOC,OAAOD,KAGH,SAASE,IACtBC,QAAQC,IAAIJ,GACZ,MAAgCK,mBAAS,CAAC,MAAK,mBAC/C,GADc,KAAc,KACRA,mBAAS,MAAI,mBAA5BC,EAAG,KAAEC,EAAM,KAChB,EAA0BF,mBAAS,WAAU,mBAAxCd,EAAM,KAAEiB,EAAS,KACtB,EAAsBH,mBAAS,OAAM,mBAAhCb,EAAI,KAAEiB,EAAO,KAClB,EAAsBJ,mBAAS,SAAQ,mBAAlCK,EAAI,KAAEC,EAAO,KAOdjB,EAAQH,EAAOI,MAAM,KACrBiB,EAAQlB,EAAMG,KAAI,SAACgB,EAAIC,GACzB,OAAO,cAACzB,EAAE,CAACE,OAAQsB,EAAIrB,KAAMA,EAAMC,IAAKiB,EAAKf,MAAM,KAAKmB,IAC1D,IAEIC,EAAQrB,EAAMG,KAAI,SAACmB,GACrB,OAAOA,EAAIrB,MAAM,IACnB,IAIA,OAFAQ,QAAQC,IAAIW,GAGV,sBAAKE,UAAU,MAAK,UAClB,6DACA,uBACEC,KAAK,OACLC,MAAOb,EACPc,SAAU,SAACC,GACTd,EAAOc,EAAEC,OAAOH,MAClB,IAGA,IACAb,EACF,gCACE,uBAAM,4DAEN,uBACA,uBACEY,KAAK,OACLC,MAAO5B,EACP6B,SAAU,SAACC,GACTb,EAAUa,EAAEC,OAAOH,MACrB,IAIF,uBAAM,+BAEN,uBACA,uBACED,KAAK,OACLC,MAAO3B,EACP4B,SAAU,SAACC,GACTZ,EAAQY,EAAEC,OAAOH,MACnB,IAIF,uBAAM,6BAEN,uBACA,uBACED,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACC,GACTV,EAAQU,EAAEC,OAAOH,MACnB,IAIF,2CACCP,EACD,+CACA,mCACGW,EAAgBR,EAAOL,EAAKf,MAAM,MAAME,KAAI,SAAC2B,EAAKC,GACjD,OACE,gCACGjC,EAAKG,MAAM,KAAK8B,GAAI,MAAKD,IAGhC,WAKV,CAsBA,SAASD,EAAgBG,EAAGC,GAC1B,IAAIjC,EAAQM,EAAK4B,IAAIF,GACrB,OAAO1B,EAAK6B,SAASnC,EAAOiC,EAC9B,CAEAxB,QAAQC,IACNmB,EACE,CACE,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,CAAC,GAAI,GAAI,MC7Hb,IAAMO,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAChC,EAAG,M","file":"static/js/main.823e4330.chunk.js","sourcesContent":["import \"./styles.css\";\r\nimport { useState } from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\n\r\nexport default function Eq(props) {\r\n  let { coeffi, vars, ans } = props;\r\n  let coeff = coeffi.split(\",\"); // [1,5]\r\n  let vard = vars.split(\",\"); // [x,y]\r\n  return (\r\n    <div>\r\n      {vard.map((v, i) => {\r\n        return (\r\n          <>\r\n            {\" \"}\r\n            {coeff[i]}\r\n            {v}+\r\n          </>\r\n        );\r\n      })}{\" \"}\r\n      0 = {ans}\r\n    </div>\r\n  );\r\n}\r\n\r\n// export default function Eq(props) {\r\n//   const [ans, setAns] = useState(\"\");\r\n//   return (\r\n//     <div>\r\n//       {props.vars.map((x) => {\r\n//         return <Smthnx x={x} />;\r\n//       })}{\" \"}\r\n//       =\r\n//       <input type=\"text\" value={ans} onChange={(e) => setAns(e.target.value)} />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// function Smthnx(props) {\r\n//   const [coeff, setCoeff] = useState(\"\");\r\n//   return (\r\n//     <span>\r\n//       <input\r\n//         type=\"text\"\r\n//         value={coeff}\r\n//         onChange={(e) => setCoeff(e.target.value)}\r\n//       />\r\n//       {props.x}\r\n//     </span>\r\n//   );\r\n// }\r\n","import \"./styles.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport Eq from \"./eq\";\nlet math = window.math;\n// import math from \"mathjs\";\n// Number(str)\nexport default function App() {\n  console.log(math);\n  let [equations, setEquations] = useState([\"a\"]);\n  let [dim, setDim] = useState(\"2\");\n  let [coeffi, setCoeffi] = useState(\"1,5/1,6\");\n  let [vars, setVars] = useState(\"x,y\");\n  let [ansz, setAnsz] = useState(\"25,46\");\n  // useEffect(() => {\n  //   console.log(\"newCoeff\");\n  //   setCoeffi(\n  //     Array.apply(null, { length: Number(dim) }).map(Number.call, Number)\n  //   );\n  // }, [dim]);\n  let coeff = coeffi.split(\"/\");\n  let stuff = coeff.map((be, id) => {\n    return <Eq coeffi={be} vars={vars} ans={ansz.split(\",\")[id]} />;\n  });\n\n  let coee2 = coeff.map((buh) => {\n    return buh.split(\",\");\n  });\n\n  console.log(coee2);\n\n  return (\n    <div className=\"App\">\n      <h1>Systems of equations solver</h1>\n      <input\n        type=\"text\"\n        value={dim}\n        onChange={(e) => {\n          setDim(e.target.value);\n        }}\n        // }\n        // }}\n      />\n      x{dim}\n      <div>\n        <hr />\n        Coefficients: seperate by comma (seperate equations by /)\n        <hr />\n        <input\n          type=\"text\"\n          value={coeffi}\n          onChange={(e) => {\n            setCoeffi(e.target.value);\n          }}\n          // }\n          // }}\n        />\n        <hr />\n        Variables: seperate by comma\n        <hr />\n        <input\n          type=\"text\"\n          value={vars}\n          onChange={(e) => {\n            setVars(e.target.value);\n          }}\n          // }\n          // }}\n        />\n        <hr />\n        Answers: seperate by comma\n        <hr />\n        <input\n          type=\"text\"\n          value={ansz}\n          onChange={(e) => {\n            setAnsz(e.target.value);\n          }}\n          // }\n          // }}\n        />\n        <h1>Equation:</h1>\n        {stuff}\n        <h1>Final answer:</h1>\n        <>\n          {linearEquations(coee2, ansz.split(\",\")).map((bee, idd) => {\n            return (\n              <div>\n                {vars.split(\",\")[idd]} = {bee}\n              </div>\n            );\n          })}\n        </>\n      </div>\n    </div>\n  );\n}\n\nfunction isPositiveInteger(str) {\n  if (typeof str !== \"string\") {\n    return false;\n  }\n  if (str == \"\") return true;\n  const num = Number(str);\n  if (Number == 0) return true;\n\n  if (Number.isInteger(num) && num > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction linearEquation(c, f) {\n  let coeff = math.inv([c]);\n  return math.multiply(coeff, [f]);\n}\n\nfunction linearEquations(c, f) {\n  let coeff = math.inv(c);\n  return math.multiply(coeff, f);\n}\n\nconsole.log(\n  linearEquations(\n    [\n      [1, 1, 1],\n      [2, 4, 2],\n      [7, 8, 6]\n    ],\n    [25, 46, 52]\n  )\n);\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}